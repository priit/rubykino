.galaxy
  .stars
    &nbsp;&nbsp;&nbsp;
    = image_tag 'planets/star.png', :class => 'star star1'
    = image_tag 'planets/star.png', :class => 'star star2'
    = image_tag 'planets/star.png', :class => 'star star3'
    = image_tag 'planets/star.png', :class => 'star star4'
    = image_tag 'planets/star.png', :class => 'star star5'
    = image_tag 'planets/star.png', :class => 'star star6'
    = image_tag 'planets/star.png', :class => 'star star7'
    = image_tag 'planets/star.png', :class => 'star star8'

    = image_tag 'planets/star.png', :class => 'star star11'
    = image_tag 'planets/star.png', :class => 'star star12'
    = image_tag 'planets/star.png', :class => 'star star13'
    = image_tag 'planets/star.png', :class => 'star star14'
    = image_tag 'planets/star.png', :class => 'star star15'
    = image_tag 'planets/star.png', :class => 'star star16'
    = image_tag 'planets/star.png', :class => 'star star17'
    = image_tag 'planets/star.png', :class => 'star star18'
  .black-hole
    &nbsp;

.row
  #ship= image_tag 'slow-ship.gif'
  #logo.large-4.large-centered.columns
    = link_to image_tag('ruby-kino-222.png', :alt => 'Ruby Kino'), '/'

.row
  #desc.large-6.columns
    %h2 Ruby Kino is ready for action!

    %p
      Third floor:<br>
      18:25 Welcome speech<br>
      18:30 Ruby conf videos<br>
      19:10 Coffee with talks<br>
      19:30 Ruby conf videos<br>
      20:00 Closing talks<br>

    %p
      NÃµmme pub:<br>
      20:10 Beer time

    %p 
      It's true hybrid event with high quality conf videos, 
      local lightning talks and pub with cold beer - what else
      does mankind need?

    %p
      You are encouraged and welcomed to make a short ~5 min 
      lighting talk or announcement. 
      Just stand up and shine with your latest and greatest ruby knowledge.

    %p
      = render 'shared/register'

    %p
      Code contribute? Fork it at 
      = link_to 'Github', 'https://github.com/priit/rubykino'

  .large-6.columns
    %h2 Videos are selected by you: 
    %ul.video-list
      - @videos.each do |video|
        %li
          .title
            = link_to video.title.strip + ', ' + video.full_length, video.url
          .votes
            .vote
              = render 'votes/form', :vote => video.votes.build
            .vote-count
              = t('votes', :count => video.votes.size)

    %h2 Suggest a new video:
    = render 'videos/form', :video => @video



